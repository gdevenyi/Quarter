# Makefile.in generated by automake 1.7.5 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_HTMLPAGES_FALSE = @BUILD_HTMLPAGES_FALSE@
BUILD_HTMLPAGES_TRUE = @BUILD_HTMLPAGES_TRUE@
BUILD_WITH_MSVC = @BUILD_WITH_MSVC@
BUILD_WITH_MSVC_FALSE = @BUILD_WITH_MSVC_FALSE@
BUILD_WITH_MSVC_TRUE = @BUILD_WITH_MSVC_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COIN_USE_CPPFLAGS = @COIN_USE_CPPFLAGS@
COIN_USE_CXXFLAGS = @COIN_USE_CXXFLAGS@
COIN_USE_LDFLAGS = @COIN_USE_LDFLAGS@
COIN_USE_LIBS = @COIN_USE_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXAMPLES_BUILD_CFLAGS = @EXAMPLES_BUILD_CFLAGS@
EXAMPLES_BUILD_CPPFLAGS = @EXAMPLES_BUILD_CPPFLAGS@
EXAMPLES_BUILD_CXXFLAGS = @EXAMPLES_BUILD_CXXFLAGS@
EXAMPLES_BUILD_LDFLAGS = @EXAMPLES_BUILD_LDFLAGS@
EXAMPLES_BUILD_LIBFLAGS = @EXAMPLES_BUILD_LIBFLAGS@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MOC = @MOC@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PLUGIN_BUILD_CFLAGS = @PLUGIN_BUILD_CFLAGS@
PLUGIN_BUILD_CPPFLAGS = @PLUGIN_BUILD_CPPFLAGS@
PLUGIN_BUILD_CXXFLAGS = @PLUGIN_BUILD_CXXFLAGS@
PLUGIN_BUILD_LIBFLAGS = @PLUGIN_BUILD_LIBFLAGS@
QT_USE_CPPFLAGS = @QT_USE_CPPFLAGS@
QT_USE_CXXFLAGS = @QT_USE_CXXFLAGS@
QT_USE_LDFLAGS = @QT_USE_LDFLAGS@
QT_USE_LIBS = @QT_USE_LIBS@
QUARTER_BETA_VERSION = @QUARTER_BETA_VERSION@
QUARTER_BUILD_CFLAGS = @QUARTER_BUILD_CFLAGS@
QUARTER_BUILD_CPPFLAGS = @QUARTER_BUILD_CPPFLAGS@
QUARTER_BUILD_CXXFLAGS = @QUARTER_BUILD_CXXFLAGS@
QUARTER_DOC_HTML = @QUARTER_DOC_HTML@
QUARTER_LIBFLAGS = @QUARTER_LIBFLAGS@
QUARTER_MAJOR_VERSION = @QUARTER_MAJOR_VERSION@
QUARTER_MICRO_VERSION = @QUARTER_MICRO_VERSION@
QUARTER_MINOR_VERSION = @QUARTER_MINOR_VERSION@
QUARTER_USE_CPPFLAGS = @QUARTER_USE_CPPFLAGS@
QUARTER_USE_LDFLAGS = @QUARTER_USE_LDFLAGS@
QUARTER_USE_LIBS = @QUARTER_USE_LIBS@
QUARTER_VERSION = @QUARTER_VERSION@
RANLIB = @RANLIB@
RCC = @RCC@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SUFFIX = @SUFFIX@
UIC = @UIC@
VERSION = @VERSION@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
ac_unique_file = @ac_unique_file@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
path_tag = @path_tag@
prefix = @prefix@
program_transform_name = @program_transform_name@
quarter_build_dir = @quarter_build_dir@
quarter_html_dir = @quarter_html_dir@
quarter_src_dir = @quarter_src_dir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sim_ac_coin_configcmd = @sim_ac_coin_configcmd@
sim_ac_doxygen_exe = @sim_ac_doxygen_exe@
sim_ac_perl_exe = @sim_ac_perl_exe@
sim_ac_qt_cygpath = @sim_ac_qt_cygpath@
sim_ac_relative_src_dir = @sim_ac_relative_src_dir@
sim_ac_relative_src_dir_p = @sim_ac_relative_src_dir_p@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

DEFAULT_INCLUDES = \
        -I$(QTDIR)/include \
        -I$(QTDIR)/include/QtOpenGL \
        -I$(QTDIR)/include/QtGui \
        -I$(QTDIR)/include/QtCore \
        -I$(top_srcdir)/include \
        -I$(top_srcdir)/src/Quarter


PrivateHeaders = \
        KeyboardHandlerP.h


RegularSources = \
        DeviceManager.cpp \
        MouseHandler.cpp \
        KeyboardHandler.cpp \
        DeviceHandler.cpp \
        KeyboardHandlerP.cpp


libdevices_la_SOURCES = \
        $(RegularSources) $(PrivateHeaders)


devices_lst_SOURCES = \
        $(RegularSources) $(PrivateHeaders)


devices_lst_CPPFLAGS = \
        $(QUARTER_BUILD_CPPFLAGS) $(COIN_USE_CPPFLAGS) $(QT_USE_CPPFLAGS)


devices_lst_CXXFLAGS = \
        $(QUARTER_BUILD_CXXFLAGS) $(COIN_USE_CXXFLAGS) $(QT_USE_CXXFLAGS)


devices_lst_CFLAGS = \
        $(QUARTER_BUILD_CFLAGS) $(COIN_USE_CFLAGS) $(QT_USE_CFLAGS)


libdevices_la_CPPFLAGS = \
        $(QUARTER_BUILD_CPPFLAGS) $(COIN_USE_CPPFLAGS) $(QT_USE_CPPFLAGS)


libdevices_la_CXXFLAGS = \
        $(QUARTER_BUILD_CXXFLAGS) $(COIN_USE_CXXFLAGS) $(QT_USE_CXXFLAGS)


libdevices_la_CFLAGS = \
        $(QUARTER_BUILD_CFLAGS) $(COIN_USE_CFLAGS) $(QT_USE_CFLAGS)


CLEANFILES = .\#* *.bak *~ *.lst

@BUILD_WITH_MSVC_TRUE@noinst_LIBRARIES = devices.lst
@BUILD_WITH_MSVC_FALSE@noinst_LTLIBRARIES = libdevices.la
subdir = src/Quarter/devices
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

devices_lst_AR = $(AR) cru
devices_lst_LIBADD =
am__objects_1 = devices_lst-DeviceManager.$(OBJEXT) \
	devices_lst-MouseHandler.$(OBJEXT) \
	devices_lst-KeyboardHandler.$(OBJEXT) \
	devices_lst-DeviceHandler.$(OBJEXT) \
	devices_lst-KeyboardHandlerP.$(OBJEXT)
am__objects_2 =
am_devices_lst_OBJECTS = $(am__objects_1) $(am__objects_2)
devices_lst_OBJECTS = $(am_devices_lst_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)

libdevices_la_LDFLAGS =
libdevices_la_LIBADD =
am__objects_3 = libdevices_la-DeviceManager.lo \
	libdevices_la-MouseHandler.lo libdevices_la-KeyboardHandler.lo \
	libdevices_la-DeviceHandler.lo \
	libdevices_la-KeyboardHandlerP.lo
am_libdevices_la_OBJECTS = $(am__objects_3) $(am__objects_2)
libdevices_la_OBJECTS = $(am_libdevices_la_OBJECTS)
depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/devices_lst-DeviceHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/devices_lst-DeviceManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/devices_lst-KeyboardHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/devices_lst-KeyboardHandlerP.Po \
@AMDEP_TRUE@	./$(DEPDIR)/devices_lst-MouseHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libdevices_la-DeviceHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libdevices_la-DeviceManager.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libdevices_la-KeyboardHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libdevices_la-KeyboardHandlerP.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libdevices_la-MouseHandler.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(devices_lst_SOURCES) $(libdevices_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(devices_lst_SOURCES) $(libdevices_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Quarter/devices/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libdevices.la: $(libdevices_la_OBJECTS) $(libdevices_la_DEPENDENCIES) 
	$(CXXLINK)  $(libdevices_la_LDFLAGS) $(libdevices_la_OBJECTS) $(libdevices_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devices_lst-DeviceHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devices_lst-DeviceManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devices_lst-KeyboardHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devices_lst-KeyboardHandlerP.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devices_lst-MouseHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdevices_la-DeviceHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdevices_la-DeviceManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdevices_la-KeyboardHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdevices_la-KeyboardHandlerP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdevices_la-MouseHandler.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

devices_lst-DeviceManager.o: DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-DeviceManager.o -MD -MP -MF "$(DEPDIR)/devices_lst-DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-DeviceManager.o `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-DeviceManager.Tpo" "$(DEPDIR)/devices_lst-DeviceManager.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceManager.cpp' object='devices_lst-DeviceManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-DeviceManager.Po' tmpdepfile='$(DEPDIR)/devices_lst-DeviceManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-DeviceManager.o `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp

devices_lst-DeviceManager.obj: DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-DeviceManager.obj -MD -MP -MF "$(DEPDIR)/devices_lst-DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-DeviceManager.obj `if test -f 'DeviceManager.cpp'; then $(CYGPATH_W) 'DeviceManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceManager.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-DeviceManager.Tpo" "$(DEPDIR)/devices_lst-DeviceManager.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceManager.cpp' object='devices_lst-DeviceManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-DeviceManager.Po' tmpdepfile='$(DEPDIR)/devices_lst-DeviceManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-DeviceManager.obj `if test -f 'DeviceManager.cpp'; then $(CYGPATH_W) 'DeviceManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceManager.cpp'; fi`

devices_lst-DeviceManager.lo: DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-DeviceManager.lo -MD -MP -MF "$(DEPDIR)/devices_lst-DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-DeviceManager.lo `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-DeviceManager.Tpo" "$(DEPDIR)/devices_lst-DeviceManager.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceManager.cpp' object='devices_lst-DeviceManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-DeviceManager.Plo' tmpdepfile='$(DEPDIR)/devices_lst-DeviceManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-DeviceManager.lo `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp

devices_lst-MouseHandler.o: MouseHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-MouseHandler.o -MD -MP -MF "$(DEPDIR)/devices_lst-MouseHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-MouseHandler.o `test -f 'MouseHandler.cpp' || echo '$(srcdir)/'`MouseHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-MouseHandler.Tpo" "$(DEPDIR)/devices_lst-MouseHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-MouseHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MouseHandler.cpp' object='devices_lst-MouseHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-MouseHandler.Po' tmpdepfile='$(DEPDIR)/devices_lst-MouseHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-MouseHandler.o `test -f 'MouseHandler.cpp' || echo '$(srcdir)/'`MouseHandler.cpp

devices_lst-MouseHandler.obj: MouseHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-MouseHandler.obj -MD -MP -MF "$(DEPDIR)/devices_lst-MouseHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-MouseHandler.obj `if test -f 'MouseHandler.cpp'; then $(CYGPATH_W) 'MouseHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/MouseHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-MouseHandler.Tpo" "$(DEPDIR)/devices_lst-MouseHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-MouseHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MouseHandler.cpp' object='devices_lst-MouseHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-MouseHandler.Po' tmpdepfile='$(DEPDIR)/devices_lst-MouseHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-MouseHandler.obj `if test -f 'MouseHandler.cpp'; then $(CYGPATH_W) 'MouseHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/MouseHandler.cpp'; fi`

devices_lst-MouseHandler.lo: MouseHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-MouseHandler.lo -MD -MP -MF "$(DEPDIR)/devices_lst-MouseHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-MouseHandler.lo `test -f 'MouseHandler.cpp' || echo '$(srcdir)/'`MouseHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-MouseHandler.Tpo" "$(DEPDIR)/devices_lst-MouseHandler.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-MouseHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MouseHandler.cpp' object='devices_lst-MouseHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-MouseHandler.Plo' tmpdepfile='$(DEPDIR)/devices_lst-MouseHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-MouseHandler.lo `test -f 'MouseHandler.cpp' || echo '$(srcdir)/'`MouseHandler.cpp

devices_lst-KeyboardHandler.o: KeyboardHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-KeyboardHandler.o -MD -MP -MF "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-KeyboardHandler.o `test -f 'KeyboardHandler.cpp' || echo '$(srcdir)/'`KeyboardHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo" "$(DEPDIR)/devices_lst-KeyboardHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandler.cpp' object='devices_lst-KeyboardHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-KeyboardHandler.Po' tmpdepfile='$(DEPDIR)/devices_lst-KeyboardHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-KeyboardHandler.o `test -f 'KeyboardHandler.cpp' || echo '$(srcdir)/'`KeyboardHandler.cpp

devices_lst-KeyboardHandler.obj: KeyboardHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-KeyboardHandler.obj -MD -MP -MF "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-KeyboardHandler.obj `if test -f 'KeyboardHandler.cpp'; then $(CYGPATH_W) 'KeyboardHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyboardHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo" "$(DEPDIR)/devices_lst-KeyboardHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandler.cpp' object='devices_lst-KeyboardHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-KeyboardHandler.Po' tmpdepfile='$(DEPDIR)/devices_lst-KeyboardHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-KeyboardHandler.obj `if test -f 'KeyboardHandler.cpp'; then $(CYGPATH_W) 'KeyboardHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyboardHandler.cpp'; fi`

devices_lst-KeyboardHandler.lo: KeyboardHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-KeyboardHandler.lo -MD -MP -MF "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-KeyboardHandler.lo `test -f 'KeyboardHandler.cpp' || echo '$(srcdir)/'`KeyboardHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo" "$(DEPDIR)/devices_lst-KeyboardHandler.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-KeyboardHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandler.cpp' object='devices_lst-KeyboardHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-KeyboardHandler.Plo' tmpdepfile='$(DEPDIR)/devices_lst-KeyboardHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-KeyboardHandler.lo `test -f 'KeyboardHandler.cpp' || echo '$(srcdir)/'`KeyboardHandler.cpp

devices_lst-DeviceHandler.o: DeviceHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-DeviceHandler.o -MD -MP -MF "$(DEPDIR)/devices_lst-DeviceHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-DeviceHandler.o `test -f 'DeviceHandler.cpp' || echo '$(srcdir)/'`DeviceHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-DeviceHandler.Tpo" "$(DEPDIR)/devices_lst-DeviceHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-DeviceHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceHandler.cpp' object='devices_lst-DeviceHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-DeviceHandler.Po' tmpdepfile='$(DEPDIR)/devices_lst-DeviceHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-DeviceHandler.o `test -f 'DeviceHandler.cpp' || echo '$(srcdir)/'`DeviceHandler.cpp

devices_lst-DeviceHandler.obj: DeviceHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-DeviceHandler.obj -MD -MP -MF "$(DEPDIR)/devices_lst-DeviceHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-DeviceHandler.obj `if test -f 'DeviceHandler.cpp'; then $(CYGPATH_W) 'DeviceHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-DeviceHandler.Tpo" "$(DEPDIR)/devices_lst-DeviceHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-DeviceHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceHandler.cpp' object='devices_lst-DeviceHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-DeviceHandler.Po' tmpdepfile='$(DEPDIR)/devices_lst-DeviceHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-DeviceHandler.obj `if test -f 'DeviceHandler.cpp'; then $(CYGPATH_W) 'DeviceHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceHandler.cpp'; fi`

devices_lst-DeviceHandler.lo: DeviceHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-DeviceHandler.lo -MD -MP -MF "$(DEPDIR)/devices_lst-DeviceHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-DeviceHandler.lo `test -f 'DeviceHandler.cpp' || echo '$(srcdir)/'`DeviceHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-DeviceHandler.Tpo" "$(DEPDIR)/devices_lst-DeviceHandler.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-DeviceHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceHandler.cpp' object='devices_lst-DeviceHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-DeviceHandler.Plo' tmpdepfile='$(DEPDIR)/devices_lst-DeviceHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-DeviceHandler.lo `test -f 'DeviceHandler.cpp' || echo '$(srcdir)/'`DeviceHandler.cpp

devices_lst-KeyboardHandlerP.o: KeyboardHandlerP.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-KeyboardHandlerP.o -MD -MP -MF "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-KeyboardHandlerP.o `test -f 'KeyboardHandlerP.cpp' || echo '$(srcdir)/'`KeyboardHandlerP.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo" "$(DEPDIR)/devices_lst-KeyboardHandlerP.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandlerP.cpp' object='devices_lst-KeyboardHandlerP.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-KeyboardHandlerP.Po' tmpdepfile='$(DEPDIR)/devices_lst-KeyboardHandlerP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-KeyboardHandlerP.o `test -f 'KeyboardHandlerP.cpp' || echo '$(srcdir)/'`KeyboardHandlerP.cpp

devices_lst-KeyboardHandlerP.obj: KeyboardHandlerP.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-KeyboardHandlerP.obj -MD -MP -MF "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-KeyboardHandlerP.obj `if test -f 'KeyboardHandlerP.cpp'; then $(CYGPATH_W) 'KeyboardHandlerP.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyboardHandlerP.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo" "$(DEPDIR)/devices_lst-KeyboardHandlerP.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandlerP.cpp' object='devices_lst-KeyboardHandlerP.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-KeyboardHandlerP.Po' tmpdepfile='$(DEPDIR)/devices_lst-KeyboardHandlerP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-KeyboardHandlerP.obj `if test -f 'KeyboardHandlerP.cpp'; then $(CYGPATH_W) 'KeyboardHandlerP.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyboardHandlerP.cpp'; fi`

devices_lst-KeyboardHandlerP.lo: KeyboardHandlerP.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -MT devices_lst-KeyboardHandlerP.lo -MD -MP -MF "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o devices_lst-KeyboardHandlerP.lo `test -f 'KeyboardHandlerP.cpp' || echo '$(srcdir)/'`KeyboardHandlerP.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo" "$(DEPDIR)/devices_lst-KeyboardHandlerP.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/devices_lst-KeyboardHandlerP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandlerP.cpp' object='devices_lst-KeyboardHandlerP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/devices_lst-KeyboardHandlerP.Plo' tmpdepfile='$(DEPDIR)/devices_lst-KeyboardHandlerP.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(devices_lst_CPPFLAGS) $(CPPFLAGS) $(devices_lst_CXXFLAGS) $(CXXFLAGS) -c -o devices_lst-KeyboardHandlerP.lo `test -f 'KeyboardHandlerP.cpp' || echo '$(srcdir)/'`KeyboardHandlerP.cpp

libdevices_la-DeviceManager.o: DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-DeviceManager.o -MD -MP -MF "$(DEPDIR)/libdevices_la-DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-DeviceManager.o `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-DeviceManager.Tpo" "$(DEPDIR)/libdevices_la-DeviceManager.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceManager.cpp' object='libdevices_la-DeviceManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-DeviceManager.Po' tmpdepfile='$(DEPDIR)/libdevices_la-DeviceManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-DeviceManager.o `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp

libdevices_la-DeviceManager.obj: DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-DeviceManager.obj -MD -MP -MF "$(DEPDIR)/libdevices_la-DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-DeviceManager.obj `if test -f 'DeviceManager.cpp'; then $(CYGPATH_W) 'DeviceManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceManager.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-DeviceManager.Tpo" "$(DEPDIR)/libdevices_la-DeviceManager.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceManager.cpp' object='libdevices_la-DeviceManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-DeviceManager.Po' tmpdepfile='$(DEPDIR)/libdevices_la-DeviceManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-DeviceManager.obj `if test -f 'DeviceManager.cpp'; then $(CYGPATH_W) 'DeviceManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceManager.cpp'; fi`

libdevices_la-DeviceManager.lo: DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-DeviceManager.lo -MD -MP -MF "$(DEPDIR)/libdevices_la-DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-DeviceManager.lo `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-DeviceManager.Tpo" "$(DEPDIR)/libdevices_la-DeviceManager.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceManager.cpp' object='libdevices_la-DeviceManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-DeviceManager.Plo' tmpdepfile='$(DEPDIR)/libdevices_la-DeviceManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-DeviceManager.lo `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp

libdevices_la-MouseHandler.o: MouseHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-MouseHandler.o -MD -MP -MF "$(DEPDIR)/libdevices_la-MouseHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-MouseHandler.o `test -f 'MouseHandler.cpp' || echo '$(srcdir)/'`MouseHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-MouseHandler.Tpo" "$(DEPDIR)/libdevices_la-MouseHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-MouseHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MouseHandler.cpp' object='libdevices_la-MouseHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-MouseHandler.Po' tmpdepfile='$(DEPDIR)/libdevices_la-MouseHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-MouseHandler.o `test -f 'MouseHandler.cpp' || echo '$(srcdir)/'`MouseHandler.cpp

libdevices_la-MouseHandler.obj: MouseHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-MouseHandler.obj -MD -MP -MF "$(DEPDIR)/libdevices_la-MouseHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-MouseHandler.obj `if test -f 'MouseHandler.cpp'; then $(CYGPATH_W) 'MouseHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/MouseHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-MouseHandler.Tpo" "$(DEPDIR)/libdevices_la-MouseHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-MouseHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MouseHandler.cpp' object='libdevices_la-MouseHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-MouseHandler.Po' tmpdepfile='$(DEPDIR)/libdevices_la-MouseHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-MouseHandler.obj `if test -f 'MouseHandler.cpp'; then $(CYGPATH_W) 'MouseHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/MouseHandler.cpp'; fi`

libdevices_la-MouseHandler.lo: MouseHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-MouseHandler.lo -MD -MP -MF "$(DEPDIR)/libdevices_la-MouseHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-MouseHandler.lo `test -f 'MouseHandler.cpp' || echo '$(srcdir)/'`MouseHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-MouseHandler.Tpo" "$(DEPDIR)/libdevices_la-MouseHandler.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-MouseHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MouseHandler.cpp' object='libdevices_la-MouseHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-MouseHandler.Plo' tmpdepfile='$(DEPDIR)/libdevices_la-MouseHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-MouseHandler.lo `test -f 'MouseHandler.cpp' || echo '$(srcdir)/'`MouseHandler.cpp

libdevices_la-KeyboardHandler.o: KeyboardHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-KeyboardHandler.o -MD -MP -MF "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-KeyboardHandler.o `test -f 'KeyboardHandler.cpp' || echo '$(srcdir)/'`KeyboardHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo" "$(DEPDIR)/libdevices_la-KeyboardHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandler.cpp' object='libdevices_la-KeyboardHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-KeyboardHandler.Po' tmpdepfile='$(DEPDIR)/libdevices_la-KeyboardHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-KeyboardHandler.o `test -f 'KeyboardHandler.cpp' || echo '$(srcdir)/'`KeyboardHandler.cpp

libdevices_la-KeyboardHandler.obj: KeyboardHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-KeyboardHandler.obj -MD -MP -MF "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-KeyboardHandler.obj `if test -f 'KeyboardHandler.cpp'; then $(CYGPATH_W) 'KeyboardHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyboardHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo" "$(DEPDIR)/libdevices_la-KeyboardHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandler.cpp' object='libdevices_la-KeyboardHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-KeyboardHandler.Po' tmpdepfile='$(DEPDIR)/libdevices_la-KeyboardHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-KeyboardHandler.obj `if test -f 'KeyboardHandler.cpp'; then $(CYGPATH_W) 'KeyboardHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyboardHandler.cpp'; fi`

libdevices_la-KeyboardHandler.lo: KeyboardHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-KeyboardHandler.lo -MD -MP -MF "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-KeyboardHandler.lo `test -f 'KeyboardHandler.cpp' || echo '$(srcdir)/'`KeyboardHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo" "$(DEPDIR)/libdevices_la-KeyboardHandler.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-KeyboardHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandler.cpp' object='libdevices_la-KeyboardHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-KeyboardHandler.Plo' tmpdepfile='$(DEPDIR)/libdevices_la-KeyboardHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-KeyboardHandler.lo `test -f 'KeyboardHandler.cpp' || echo '$(srcdir)/'`KeyboardHandler.cpp

libdevices_la-DeviceHandler.o: DeviceHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-DeviceHandler.o -MD -MP -MF "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-DeviceHandler.o `test -f 'DeviceHandler.cpp' || echo '$(srcdir)/'`DeviceHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo" "$(DEPDIR)/libdevices_la-DeviceHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceHandler.cpp' object='libdevices_la-DeviceHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-DeviceHandler.Po' tmpdepfile='$(DEPDIR)/libdevices_la-DeviceHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-DeviceHandler.o `test -f 'DeviceHandler.cpp' || echo '$(srcdir)/'`DeviceHandler.cpp

libdevices_la-DeviceHandler.obj: DeviceHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-DeviceHandler.obj -MD -MP -MF "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-DeviceHandler.obj `if test -f 'DeviceHandler.cpp'; then $(CYGPATH_W) 'DeviceHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo" "$(DEPDIR)/libdevices_la-DeviceHandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceHandler.cpp' object='libdevices_la-DeviceHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-DeviceHandler.Po' tmpdepfile='$(DEPDIR)/libdevices_la-DeviceHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-DeviceHandler.obj `if test -f 'DeviceHandler.cpp'; then $(CYGPATH_W) 'DeviceHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceHandler.cpp'; fi`

libdevices_la-DeviceHandler.lo: DeviceHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-DeviceHandler.lo -MD -MP -MF "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-DeviceHandler.lo `test -f 'DeviceHandler.cpp' || echo '$(srcdir)/'`DeviceHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo" "$(DEPDIR)/libdevices_la-DeviceHandler.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-DeviceHandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DeviceHandler.cpp' object='libdevices_la-DeviceHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-DeviceHandler.Plo' tmpdepfile='$(DEPDIR)/libdevices_la-DeviceHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-DeviceHandler.lo `test -f 'DeviceHandler.cpp' || echo '$(srcdir)/'`DeviceHandler.cpp

libdevices_la-KeyboardHandlerP.o: KeyboardHandlerP.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-KeyboardHandlerP.o -MD -MP -MF "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-KeyboardHandlerP.o `test -f 'KeyboardHandlerP.cpp' || echo '$(srcdir)/'`KeyboardHandlerP.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo" "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandlerP.cpp' object='libdevices_la-KeyboardHandlerP.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-KeyboardHandlerP.Po' tmpdepfile='$(DEPDIR)/libdevices_la-KeyboardHandlerP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-KeyboardHandlerP.o `test -f 'KeyboardHandlerP.cpp' || echo '$(srcdir)/'`KeyboardHandlerP.cpp

libdevices_la-KeyboardHandlerP.obj: KeyboardHandlerP.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-KeyboardHandlerP.obj -MD -MP -MF "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-KeyboardHandlerP.obj `if test -f 'KeyboardHandlerP.cpp'; then $(CYGPATH_W) 'KeyboardHandlerP.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyboardHandlerP.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo" "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandlerP.cpp' object='libdevices_la-KeyboardHandlerP.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-KeyboardHandlerP.Po' tmpdepfile='$(DEPDIR)/libdevices_la-KeyboardHandlerP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-KeyboardHandlerP.obj `if test -f 'KeyboardHandlerP.cpp'; then $(CYGPATH_W) 'KeyboardHandlerP.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyboardHandlerP.cpp'; fi`

libdevices_la-KeyboardHandlerP.lo: KeyboardHandlerP.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -MT libdevices_la-KeyboardHandlerP.lo -MD -MP -MF "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o libdevices_la-KeyboardHandlerP.lo `test -f 'KeyboardHandlerP.cpp' || echo '$(srcdir)/'`KeyboardHandlerP.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo" "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/libdevices_la-KeyboardHandlerP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KeyboardHandlerP.cpp' object='libdevices_la-KeyboardHandlerP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/libdevices_la-KeyboardHandlerP.Plo' tmpdepfile='$(DEPDIR)/libdevices_la-KeyboardHandlerP.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libdevices_la_CPPFLAGS) $(CPPFLAGS) $(libdevices_la_CXXFLAGS) $(CXXFLAGS) -c -o libdevices_la-KeyboardHandlerP.lo `test -f 'KeyboardHandlerP.cpp' || echo '$(srcdir)/'`KeyboardHandlerP.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)

installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am


devices.lst: $(devices_lst_OBJECTS)
	@echo "Linking $@..."; \
	rm -f $@; \
	for obj in $(devices_lst_OBJECTS); do \
	  echo $$obj >>$@; \
	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
